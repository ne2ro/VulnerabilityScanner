import socket
import platform
import subprocess

# Function to scan a single port on the target
def scan_port(target, port):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(1)  # 1 second timeout
            result = sock.connect_ex((target, port))
            if result == 0:
                return True
            else:
                return False
    except Exception as e:
        print(f"Error scanning port {port}: {e}")
        return False

# Function to scan a list of common ports
def scan_common_ports(target):
    common_ports = [22, 23, 80, 443, 8080]  # SSH, Telnet, HTTP, HTTPS, HTTP-alt
    print(f"\n[*] Scanning {target} for common open ports...\n")
    open_ports = []
    
    for port in common_ports:
        if scan_port(target, port):
            print(f"[+] Port {port} is open.")
            open_ports.append(port)
        else:
            print(f"[-] Port {port} is closed.")
    
    return open_ports

# Function to check for basic system information
def check_system_info():
    print("\n[*] Gathering basic system information...\n")
    os_info = platform.uname()
    print(f"System: {os_info.system}")
    print(f"Node Name: {os_info.node}")
    print(f"Release: {os_info.release}")
    print(f"Version: {os_info.version}")
    print(f"Machine: {os_info.machine}")
    print(f"Processor: {os_info.processor}")

# Function to check if a specific service is installed and running (example: Apache)
def check_service_status(service_name):
    print(f"\n[*] Checking status of {service_name} service...\n")
    try:
        service_status = subprocess.check_output(["systemctl", "is-active", service_name], stderr=subprocess.STDOUT).decode().strip()
        if service_status == "active":
            print(f"[+] {service_name} is running.")
        else:
            print(f"[-] {service_name} is not running.")
    except subprocess.CalledProcessError:
        print(f"[-] {service_name} service is not installed or accessible.")

# Main function to run the vulnerability scanner
def main():
    target = input("Enter the target IP address: ")
    
    # Scan for common open ports
    open_ports = scan_common_ports(target)
    
    # Check basic system information
    check_system_info()
    
    # Check if Apache service is running
    check_service_status("apache2")  # Replace with "httpd" for Red Hat/CentOS systems

if __name__ == "__main__":
    main()
